// <auto-generated />
using System;
using Domain_Layer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DomainLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230214135426_final")]
    partial class final
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain_Layer.Models.Owners", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("altcontact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("owners");
                });

            modelBuilder.Entity("DomainLayer.Models.AssignedProperties", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("propertyid")
                        .HasColumnType("bigint");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("tenantid")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("assignedproperties");
                });

            modelBuilder.Entity("DomainLayer.Models.CityModel", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("cityname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("DomainLayer.Models.CountryTable", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("countryname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("DomainLayer.Models.PropertyInfo", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("area")
                        .HasColumnType("float");

                    b.Property<DateTime>("availabledate")
                        .HasColumnType("datetime2");

                    b.Property<int>("balcony")
                        .HasColumnType("int");

                    b.Property<int>("bathroom")
                        .HasColumnType("int");

                    b.Property<int>("bedroom")
                        .HasColumnType("int");

                    b.Property<long>("cityid")
                        .HasColumnType("bigint");

                    b.Property<long?>("country")
                        .HasColumnType("bigint");

                    b.Property<long>("countryid")
                        .HasColumnType("bigint");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isapprove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ownerid")
                        .HasColumnType("bigint");

                    b.Property<long>("propertytypeid")
                        .HasColumnType("bigint");

                    b.Property<string>("seourl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("specification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("stateid")
                        .HasColumnType("bigint");

                    b.Property<int>("transtpetype")
                        .HasColumnType("int");

                    b.Property<string>("zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("cityid");

                    b.HasIndex("country");

                    b.HasIndex("stateid");

                    b.ToTable("propertyInfos");
                });

            modelBuilder.Entity("DomainLayer.Models.Queries", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.Property<long>("propertyid")
                        .HasColumnType("bigint");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("tenantid")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("queries");
                });

            modelBuilder.Entity("DomainLayer.Models.RentDetails", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("enddate")
                        .HasColumnType("datetime2");

                    b.Property<int>("payableamount")
                        .HasColumnType("int");

                    b.Property<long>("rentid")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("startdate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("rentid");

                    b.ToTable("rentTables");
                });

            modelBuilder.Entity("DomainLayer.Models.RentMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("enddate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ownerid")
                        .HasColumnType("bigint");

                    b.Property<long>("propertyid")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("startdate")
                        .HasColumnType("datetime2");

                    b.Property<long>("tenantid")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("ownerid");

                    b.HasIndex("propertyid");

                    b.HasIndex("tenantid");

                    b.ToTable("rentMasters");
                });

            modelBuilder.Entity("DomainLayer.Models.StateTable", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("statename")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("states");
                });

            modelBuilder.Entity("DomainLayer.Models.Tenant", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firsttname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lasttname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tenants");
                });

            modelBuilder.Entity("DomainLayer.Models.Users", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DomainLayer.Models.ZipCodeTable", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("deleteddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("zipCodes");
                });

            modelBuilder.Entity("DomainLayer.Models.PropertyInfo", b =>
                {
                    b.HasOne("DomainLayer.Models.CityModel", "CityModel")
                        .WithMany()
                        .HasForeignKey("cityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.CountryTable", "CountryTable")
                        .WithMany()
                        .HasForeignKey("country");

                    b.HasOne("DomainLayer.Models.StateTable", "StateTable")
                        .WithMany()
                        .HasForeignKey("stateid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityModel");

                    b.Navigation("CountryTable");

                    b.Navigation("StateTable");
                });

            modelBuilder.Entity("DomainLayer.Models.RentDetails", b =>
                {
                    b.HasOne("DomainLayer.Models.RentMaster", "RentMaster")
                        .WithMany()
                        .HasForeignKey("rentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RentMaster");
                });

            modelBuilder.Entity("DomainLayer.Models.RentMaster", b =>
                {
                    b.HasOne("Domain_Layer.Models.Owners", "Owners")
                        .WithMany()
                        .HasForeignKey("ownerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.PropertyInfo", "PropertyInfo")
                        .WithMany()
                        .HasForeignKey("propertyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("tenantid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owners");

                    b.Navigation("PropertyInfo");

                    b.Navigation("Tenant");
                });
#pragma warning restore 612, 618
        }
    }
}
